<?xml version="1.0"?>
<launch>
	<arg name="simulation"     default="false"/> 
	<arg name="colored_pcl"    default="false"/>
	<arg name="rviz"		   default="false"/>
	<arg name="depth_output"   default="depth_completion"/>


	<!-- Grab config file  -->
	<rosparam file="$(find msg_chn_ros)/msg_chn_ros/config/config.yaml" subst_value= "True"/>
	<!-- Run msg code  -->
	<node name="msg_chn_node" 
		  pkg ="msg_chn_ros" 
		  type="msg_chn_node.py" 
		  output="screen">
		  <!-- Output depth completion name -->
		  <remap from="/depth_completion/image_raw" to="/$(arg depth_output)/image_raw"/>
	</node>

	<node name="msg_chn_colored" 
		  pkg= "msg_chn_ros" 
		  type="msg_chn_colored.py" 
		  output="screen">
		  <!-- Input Depth Completion to color  -->
		  <remap from='/depth' to="$(arg depth_output)/image_raw"/>
		  <!-- Output topics  -->
		  <remap from="/depth_completion/overlaid/image_raw" 
		  		 to="$(arg depth_output)/overlaid/image_raw"/>
		  <remap from="/depth_completion/colored/image_raw" 
		  		 to="$(arg depth_output)/colored/image_raw"/>
	</node>
	
	<!-- launch rviz with custom profile-->
	<group if="$(arg rviz)">
		<node pkg="rviz" type="rviz" name="rviz" args="-d $(find msg_chn_ros)/msg_chn_ros/rviz/depth_video.rviz" output="screen"/>
	</group>


	<group if="$(arg colored_pcl)">
		<node pkg="nodelet" type="nodelet" args="manager" name="standalone_nodelet" output="screen"/>
		<!-- Convert to point cloud -->
		<node pkg="nodelet" type="nodelet" name="depth_completion_pcl" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet no-bond" output="screen">
			<!-- RGB Camera info -->
			<remap from="rgb/camera_info" to="/dalsa_camera_720p/camera_info"/>
			<!-- RGB Image -->
			<remap from="rgb/image_rect_color" to="/dalsa_camera_720p"/>
			<!-- Depth Image -->
			<remap from="depth_registered/image_rect" to="$(arg depth_output)/image_raw"/>
			<!-- Output PCL -->
			<remap from="depth_registered/points" to="/camera/depth/points"/>
		</node>
	</group>

		<!-- Compress topics -->
	<node pkg="image_transport" 
		  type="republish" 
		  name="depth_completion_republish" 
		  args="raw in:=$(arg depth_output)/image_raw 
		  	 	compressedDepth out:=$(arg depth_output)"/>
	<node pkg="image_transport" 
		  type="republish"
		  name="colored_depth_completion_republish" 
		  args="raw in:=$(arg depth_output)/colored/image_raw 
		  		compressed out:=$(arg depth_output)/colored"/> 

	<node pkg="image_transport" 
		  type="republish"
		  name="overlaid_depth_completion_republish" 
		  args="raw in:=$(arg depth_output)/overlaid/image_raw 
		  		compressed out:=$(arg depth_output)/overlaid"/>

	<!--################ FOR SEMFIRE ROSBAGS ONLY ###################### -->
	<group if="$(arg simulation)">
		<!-- Read simulation time -->
		<param name="use_sim_time" value="true" />
		<!-- Start bag -->
		<node pkg="rosbag" type="play" 
			  name="rosbag_play" 
			  args="/home/core_uc/bag_test_msg_chn_modified.bag clock pause" 
			  output="screen"/>
	    <!-- Compressed to Raw -->
	    <node pkg="image_transport" 
	    	  type="republish" 
	    	  name="dalsa_republish" 
	   		  args="compressed in:=dalsa_camera_720p 
	   		        raw out:=dalsa_camera_720p"/> 

	   	<node pkg="image_transport" 
	   		  type="republish" 
	   		  name="depth_republish" 
	   		  args="compressedDepth in:=/front_lslidar/depth/image_raw 
	   		        raw out:=/front_lslidar/depth/image_raw"/> 
	   	<!-- Create camera info for older rosbags -->
	 	<node pkg="dalsa_genie_nano_c2420" 
	 		  type="camera_info_publisher.py"  
	 		  name="dalsa_camera_info">
	 		  <param name="camera_info_path" 
	 				 value="$(find dalsa_genie_nano_c2420)/config/camera_info.yaml"/>
		</node>

		    <!--display the bobcat (the dataset has an initial /tf_static with all the transforms: I've removed the laser tf to adjust the 30ยบ) -->
		<include file="$(find semfire_bobcat)/launch/display_semfire_bobcat.launch">
			<arg name="rviz"     value="false"/>  <!--we'll use a custom rviz profile below-->
		</include>
	</group> 
</launch>

